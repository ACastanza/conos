% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/de.correction.R
\name{calcFCcorrection}
\alias{calcFCcorrection}
\title{Get a correction vector by combining fold changes over all the results}
\usage{
calcFCcorrection(ens.p2, aggregation.id, sample.type.comparison,
  cell.types.exclude = c("tumor"), scaleByVariance = TRUE,
  useTrimmed = FALSE, n.cores = 1, coldata = NULL,
  cell.type.factor = NULL, per.cell.type.fcs = NULL, verbose = FALSE,
  fc.method = "deseq2", cell.factor.map = NULL, fc.cellfactor = NULL,
  counts.add.bg = NULL)
}
\arguments{
\item{ens.p2}{ensembl p2 object}

\item{aggregation.id}{the aggregation data slot to use from the ens.p2 object}

\item{sample.type.comparison}{character vector of 'sample.type' to compare e.g. T vs W}

\item{cell.types.exclude}{cell types to ignore from the fine-grained cell.type.factor after mapping to coarser clusters}

\item{scaleByVariance}{scale the mean fold changes by the Variance}

\item{useTrimmed}{return results from trimmed mean}

\item{n.cores}{number of cores to use}

\item{coldata}{metadata for aggregated data}

\item{cell.type.factor}{named factor of cell type assignments to groups}

\item{per.cell.type.fcs}{pre-calculated per cell type FCs, if null they will be recalculated here}

\item{verbose}{logical verbosity}

\item{fc.method}{method to pass to getPerCellTypeFCs() if precalculated per.cell.type.fcs are not provided}

\item{cell.factor.map}{many to one mapping of levels of cell.type.factor to levels of fc.cellfactor}

\item{fc.cellfactor}{cell grouping to use for the fold change generation}
}
\description{
Get a correction vector by combining fold changes of every gene accross multiple cell types
into a single value. The correction change is weighted by the chi square distribution so that genes
with variable fold changes do not get corrected.

Two different cell groupings need to be provided. fc.cellfactor dictates the groupings of the cells used
for collapsing, this should either be identical or more coarse than cell.type.factor. If this is provided a
many to one map from clusters of cell.type.factor to fc.cellfactor is required as cell.factor.map
}
